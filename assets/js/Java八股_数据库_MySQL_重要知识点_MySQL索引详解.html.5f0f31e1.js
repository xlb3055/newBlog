"use strict";(self.webpackChunkblog_road=self.webpackChunkblog_road||[]).push([[2761],{6262:(i,s)=>{s.A=(i,s)=>{const l=i.__vccOpts||i;for(const[i,a]of s)l[i]=a;return l}},4266:(i,s,l)=>{l.r(s),l.d(s,{comp:()=>t,data:()=>h});var a=l(641);const e=[(0,a.Fv)('<h1 id="mysql索引详解" tabindex="-1"><a class="header-anchor" href="#mysql索引详解"><span>MySQL索引详解</span></a></h1><hr><h2 id="_1-索引是什么-为什么需要索引" tabindex="-1"><a class="header-anchor" href="#_1-索引是什么-为什么需要索引"><span><strong>1. 索引是什么？为什么需要索引？</strong></span></a></h2><h3 id="_1-1-索引是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-索引是什么"><span><strong>1.1 索引是什么？</strong></span></a></h3><p>索引就像书的目录。你想查一本书中的内容时，不会一页页翻，而是直接通过目录定位到具体的章节。这就是索引的作用——<strong>加速查询</strong>。</p><p>在数据库中，索引是一种特殊的<strong>数据结构</strong>，能快速定位数据，而不用逐行扫描整个表。</p><hr><h3 id="_1-2-为什么需要索引" tabindex="-1"><a class="header-anchor" href="#_1-2-为什么需要索引"><span><strong>1.2 为什么需要索引？</strong></span></a></h3><p><strong>性能提升</strong>。假设有 1 亿条数据，如果没有索引，查询的时间复杂度是 O(n)，需要扫描所有行。如果有索引，复杂度可以降为 O(log n) 或更低。</p><p>举例：</p><ul><li>查找学生信息： <ul><li>无索引：翻阅所有学生数据，类似“找针的过程”。</li><li>有索引：直接找到针的位置。</li></ul></li></ul><hr><h2 id="_2-索引的优缺点" tabindex="-1"><a class="header-anchor" href="#_2-索引的优缺点"><span><strong>2. 索引的优缺点</strong></span></a></h2><h3 id="_2-1-优点" tabindex="-1"><a class="header-anchor" href="#_2-1-优点"><span><strong>2.1 优点</strong></span></a></h3><ol><li><strong>查询更快</strong>：通过索引可以快速定位数据，减少 I/O 操作。 <ul><li>举例：查找 ID 为 100 的用户，索引会直接定位到存储位置，而不需要全表扫描。</li></ul></li><li><strong>支持排序</strong>：索引本质上是有序的，能高效完成 <code>ORDER BY</code>、<code>GROUP BY</code> 操作。</li><li><strong>提高 JOIN 查询效率</strong>：在关联查询中，通过索引能快速匹配数据。</li></ol><hr><h3 id="_2-2-缺点" tabindex="-1"><a class="header-anchor" href="#_2-2-缺点"><span><strong>2.2 缺点</strong></span></a></h3><ol><li><strong>写性能下降</strong>： <ul><li><strong>原因</strong>：插入、更新或删除数据时，需要同时维护索引。</li><li>举例：新增数据时，需要更新索引中对应的树结构。</li></ul></li><li><strong>占用空间</strong>： <ul><li>每个索引都会额外占用存储空间，索引多了会增加存储成本。</li></ul></li><li><strong>索引可能失效</strong>： <ul><li>如果 SQL 写法不当，可能导致索引失效，无法发挥作用。</li></ul></li></ol><hr><h2 id="_3-索引底层数据结构" tabindex="-1"><a class="header-anchor" href="#_3-索引底层数据结构"><span><strong>3. 索引底层数据结构</strong></span></a></h2><p>数据库索引的核心在于底层数据结构，常见的有 <code>Hash 表</code> 和 <code>B+ 树</code>。</p><h3 id="_3-1-hash-表" tabindex="-1"><a class="header-anchor" href="#_3-1-hash-表"><span><strong>3.1 Hash 表</strong></span></a></h3><ul><li><strong>特点</strong>：通过哈希函数快速定位。</li><li><strong>优点</strong>：速度快，适合等值查询（<code>=</code>）。</li><li><strong>缺点</strong>： <ul><li>无法排序：<code>BETWEEN</code> 和 <code>ORDER BY</code> 无法使用。</li><li>哈希冲突：可能出现性能下降。</li></ul></li></ul><h3 id="_3-2-b-树-mysql-索引的核心结构" tabindex="-1"><a class="header-anchor" href="#_3-2-b-树-mysql-索引的核心结构"><span><strong>3.2 B+ 树（MySQL 索引的核心结构）</strong></span></a></h3><ul><li><strong>特点</strong>： <ul><li>叶子节点存储所有数据，非叶子节点存储索引。</li><li>所有叶子节点通过链表连接，方便范围查询。</li></ul></li><li><strong>优点</strong>： <ol><li><strong>支持排序</strong>：从叶子节点的链表中可以直接按顺序访问数据。</li><li><strong>范围查询效率高</strong>：<code>BETWEEN</code>、<code>&gt;</code>、<code>&lt;</code> 等条件查询非常高效。</li></ol></li><li><strong>应用</strong>： <ul><li>MySQL 大多数存储引擎（如 InnoDB）都基于 B+ 树实现。</li></ul></li></ul><hr><h2 id="_4-索引类型总结" tabindex="-1"><a class="header-anchor" href="#_4-索引类型总结"><span><strong>4. 索引类型总结</strong></span></a></h2><h3 id="_4-1-主键索引" tabindex="-1"><a class="header-anchor" href="#_4-1-主键索引"><span><strong>4.1 主键索引</strong></span></a></h3><ul><li>主键索引是聚簇索引，数据物理存储顺序和索引顺序一致。</li><li><strong>特点</strong>：每张表只能有一个主键索引。</li><li><strong>示例</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="_4-2-二级索引" tabindex="-1"><a class="header-anchor" href="#_4-2-二级索引"><span><strong>4.2 二级索引</strong></span></a></h3><ul><li>普通索引，也叫非聚簇索引，存储的是字段值和主键值。</li><li><strong>特点</strong>：查询时需要通过主键回表。</li><li><strong>示例</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> INDEX</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> idx_name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h3 id="_4-3-覆盖索引" tabindex="-1"><a class="header-anchor" href="#_4-3-覆盖索引"><span><strong>4.3 覆盖索引</strong></span></a></h3><ul><li>覆盖索引指查询字段只需要从索引中获取，而无需回表。</li><li><strong>示例</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;John&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>如果 <code>name</code> 有索引，查询时不会回表，效率更高。</li></ul><hr><h3 id="_4-4-联合索引" tabindex="-1"><a class="header-anchor" href="#_4-4-联合索引"><span><strong>4.4 联合索引</strong></span></a></h3><ul><li>联合索引是由多个字段组成的复合索引。</li><li><strong>最左前缀原则</strong>： <ul><li>查询条件必须从索引的最左字段开始匹配。</li><li>示例：联合索引 <code>(name, age)</code>： <ul><li>可用：<code>WHERE name = &#39;John&#39;</code> 或 <code>WHERE name = &#39;John&#39; AND age = 25</code></li><li>不可用：<code>WHERE age = 25</code></li></ul></li></ul></li></ul><hr><h3 id="_4-5-聚簇索引与非聚簇索引" tabindex="-1"><a class="header-anchor" href="#_4-5-聚簇索引与非聚簇索引"><span><strong>4.5 聚簇索引与非聚簇索引</strong></span></a></h3><h4 id="聚簇索引" tabindex="-1"><a class="header-anchor" href="#聚簇索引"><span><strong>聚簇索引</strong></span></a></h4><ul><li>数据的存储顺序与索引一致，查询时直接找到数据。</li><li><strong>适用场景</strong>：主键查询或范围查询。</li><li><strong>缺点</strong>：更新和插入的性能较差。</li></ul><h4 id="非聚簇索引" tabindex="-1"><a class="header-anchor" href="#非聚簇索引"><span><strong>非聚簇索引</strong></span></a></h4><ul><li>索引存储和数据存储分开，需要回表查询数据。</li><li><strong>适用场景</strong>：辅助索引。</li></ul><hr><h2 id="_5-正确使用索引的一些建议" tabindex="-1"><a class="header-anchor" href="#_5-正确使用索引的一些建议"><span><strong>5. 正确使用索引的一些建议</strong></span></a></h2><h3 id="_5-1-选择合适的字段创建索引" tabindex="-1"><a class="header-anchor" href="#_5-1-选择合适的字段创建索引"><span><strong>5.1 选择合适的字段创建索引</strong></span></a></h3><ul><li>索引字段应满足以下条件： <ul><li>经常出现在 <code>WHERE</code> 或 <code>JOIN</code> 的条件中。</li><li>字段值的区分度高（基数大）。</li></ul></li></ul><h3 id="_5-2-被频繁更新的字段应慎重建立索引" tabindex="-1"><a class="header-anchor" href="#_5-2-被频繁更新的字段应慎重建立索引"><span><strong>5.2 被频繁更新的字段应慎重建立索引</strong></span></a></h3><ul><li>索引的维护成本高，频繁更新的字段可能导致写性能下降。</li></ul><h3 id="_5-3-限制每张表的索引数量" tabindex="-1"><a class="header-anchor" href="#_5-3-限制每张表的索引数量"><span><strong>5.3 限制每张表的索引数量</strong></span></a></h3><ul><li>每张表的索引不宜超过 5 个。</li><li><strong>原因</strong>： <ul><li>索引过多会影响插入、更新性能。</li><li>查询优化器在选择索引时也会耗费更多时间。</li></ul></li></ul><h3 id="_5-4-联合索引优于单列索引" tabindex="-1"><a class="header-anchor" href="#_5-4-联合索引优于单列索引"><span><strong>5.4 联合索引优于单列索引</strong></span></a></h3><ul><li>单列索引效率低，优先考虑联合索引。</li><li>示例：在联合索引 <code>(name, age)</code> 下，以下查询都能利用索引：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;John&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;John&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h2 id="_6-避免索引失效的常见问题" tabindex="-1"><a class="header-anchor" href="#_6-避免索引失效的常见问题"><span><strong>6. 避免索引失效的常见问题</strong></span></a></h2><h3 id="_6-1-在-where-子句中对索引字段进行函数转换" tabindex="-1"><a class="header-anchor" href="#_6-1-在-where-子句中对索引字段进行函数转换"><span><strong>6.1 在 WHERE 子句中对索引字段进行函数转换</strong></span></a></h3><ul><li>错误：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> DATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(created_at) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;2023-01-01&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>索引失效，因为函数会导致索引被整体扫描。</li></ul></li><li>正确：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> created_at </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;2023-01-01&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> created_at </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;2023-01-02&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h3 id="_6-2-数据类型不一致" tabindex="-1"><a class="header-anchor" href="#_6-2-数据类型不一致"><span><strong>6.2 数据类型不一致</strong></span></a></h3><ul><li>错误：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> phone_number </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1234567890</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-- phone_number 是字符串类型</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>索引失效，因为类型不一致。</li></ul></li><li>正确：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> phone_number </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;1234567890&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h2 id="_7-如何分析-sql-是否使用索引" tabindex="-1"><a class="header-anchor" href="#_7-如何分析-sql-是否使用索引"><span><strong>7. 如何分析 SQL 是否使用索引</strong></span></a></h2><h3 id="_7-1-使用-explain-查看执行计划" tabindex="-1"><a class="header-anchor" href="#_7-1-使用-explain-查看执行计划"><span><strong>7.1 使用 EXPLAIN 查看执行计划</strong></span></a></h3><ul><li><strong>示例</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EXPLAIN </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;John&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>关键字段解析</strong>： <ul><li><code>type</code>：查询类型，最好为 <code>index</code> 或 <code>ref</code>。</li><li><code>key</code>：使用的索引名称。</li><li><code>rows</code>：扫描的行数，越少越好。</li></ul></li></ul><hr><h2 id="_8-实际应用案例总结" tabindex="-1"><a class="header-anchor" href="#_8-实际应用案例总结"><span><strong>8. 实际应用案例总结</strong></span></a></h2><ol><li><p><strong>覆盖索引优化查询</strong></p><ul><li>查询字段和索引字段一致，无需回表，减少 I/O。</li><li>示例：<code>SELECT name FROM users WHERE name = &#39;John&#39;;</code></li></ul></li><li><p><strong>联合索引代替多个单列索引</strong></p><ul><li>优化：将 <code>name</code> 和 <code>age</code> 建成联合索引 <code>(name, age)</code>。</li></ul></li><li><p><strong>避免无效的条件导致索引失效</strong></p><ul><li>函数转换、数据类型不一致等都会导致索引失效。</li></ul></li></ol><hr>',69)],n={},t=(0,l(6262).A)(n,[["render",function(i,s){return(0,a.uX)(),(0,a.CE)("div",null,e)}]]),h=JSON.parse('{"path":"/Java%E5%85%AB%E8%82%A1/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E9%87%8D%E8%A6%81%E7%9F%A5%E8%AF%86%E7%82%B9/MySQL%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3.html","title":"MySQL索引详解","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-11-22T00:00:00.000Z","category":["后端"],"tag":["MySQL","数据库"],"description":"MySQL索引详解 1. 索引是什么？为什么需要索引？ 1.1 索引是什么？ 索引就像书的目录。你想查一本书中的内容时，不会一页页翻，而是直接通过目录定位到具体的章节。这就是索引的作用——加速查询。 在数据库中，索引是一种特殊的数据结构，能快速定位数据，而不用逐行扫描整个表。 1.2 为什么需要索引？ 性能提升。假设有 1 亿条数据，如果没有索引，查询...","head":[["meta",{"property":"og:url","content":"https://xlb3055.github.io/newBlog/Java%E5%85%AB%E8%82%A1/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E9%87%8D%E8%A6%81%E7%9F%A5%E8%AF%86%E7%82%B9/MySQL%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"Bin的成长博客"}],["meta",{"property":"og:title","content":"MySQL索引详解"}],["meta",{"property":"og:description","content":"MySQL索引详解 1. 索引是什么？为什么需要索引？ 1.1 索引是什么？ 索引就像书的目录。你想查一本书中的内容时，不会一页页翻，而是直接通过目录定位到具体的章节。这就是索引的作用——加速查询。 在数据库中，索引是一种特殊的数据结构，能快速定位数据，而不用逐行扫描整个表。 1.2 为什么需要索引？ 性能提升。假设有 1 亿条数据，如果没有索引，查询..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-06T06:24:41.000Z"}],["meta",{"property":"article:author","content":"Bin"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:published_time","content":"2024-11-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-06T06:24:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL索引详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-22T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-06T06:24:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Bin\\",\\"url\\":\\"/avator_img.jpg\\"}]}"]]},"headers":[{"level":2,"title":"1. 索引是什么？为什么需要索引？","slug":"_1-索引是什么-为什么需要索引","link":"#_1-索引是什么-为什么需要索引","children":[{"level":3,"title":"1.1 索引是什么？","slug":"_1-1-索引是什么","link":"#_1-1-索引是什么","children":[]},{"level":3,"title":"1.2 为什么需要索引？","slug":"_1-2-为什么需要索引","link":"#_1-2-为什么需要索引","children":[]}]},{"level":2,"title":"2. 索引的优缺点","slug":"_2-索引的优缺点","link":"#_2-索引的优缺点","children":[{"level":3,"title":"2.1 优点","slug":"_2-1-优点","link":"#_2-1-优点","children":[]},{"level":3,"title":"2.2 缺点","slug":"_2-2-缺点","link":"#_2-2-缺点","children":[]}]},{"level":2,"title":"3. 索引底层数据结构","slug":"_3-索引底层数据结构","link":"#_3-索引底层数据结构","children":[{"level":3,"title":"3.1 Hash 表","slug":"_3-1-hash-表","link":"#_3-1-hash-表","children":[]},{"level":3,"title":"3.2 B+ 树（MySQL 索引的核心结构）","slug":"_3-2-b-树-mysql-索引的核心结构","link":"#_3-2-b-树-mysql-索引的核心结构","children":[]}]},{"level":2,"title":"4. 索引类型总结","slug":"_4-索引类型总结","link":"#_4-索引类型总结","children":[{"level":3,"title":"4.1 主键索引","slug":"_4-1-主键索引","link":"#_4-1-主键索引","children":[]},{"level":3,"title":"4.2 二级索引","slug":"_4-2-二级索引","link":"#_4-2-二级索引","children":[]},{"level":3,"title":"4.3 覆盖索引","slug":"_4-3-覆盖索引","link":"#_4-3-覆盖索引","children":[]},{"level":3,"title":"4.4 联合索引","slug":"_4-4-联合索引","link":"#_4-4-联合索引","children":[]},{"level":3,"title":"4.5 聚簇索引与非聚簇索引","slug":"_4-5-聚簇索引与非聚簇索引","link":"#_4-5-聚簇索引与非聚簇索引","children":[]}]},{"level":2,"title":"5. 正确使用索引的一些建议","slug":"_5-正确使用索引的一些建议","link":"#_5-正确使用索引的一些建议","children":[{"level":3,"title":"5.1 选择合适的字段创建索引","slug":"_5-1-选择合适的字段创建索引","link":"#_5-1-选择合适的字段创建索引","children":[]},{"level":3,"title":"5.2 被频繁更新的字段应慎重建立索引","slug":"_5-2-被频繁更新的字段应慎重建立索引","link":"#_5-2-被频繁更新的字段应慎重建立索引","children":[]},{"level":3,"title":"5.3 限制每张表的索引数量","slug":"_5-3-限制每张表的索引数量","link":"#_5-3-限制每张表的索引数量","children":[]},{"level":3,"title":"5.4 联合索引优于单列索引","slug":"_5-4-联合索引优于单列索引","link":"#_5-4-联合索引优于单列索引","children":[]}]},{"level":2,"title":"6. 避免索引失效的常见问题","slug":"_6-避免索引失效的常见问题","link":"#_6-避免索引失效的常见问题","children":[{"level":3,"title":"6.1 在 WHERE 子句中对索引字段进行函数转换","slug":"_6-1-在-where-子句中对索引字段进行函数转换","link":"#_6-1-在-where-子句中对索引字段进行函数转换","children":[]},{"level":3,"title":"6.2 数据类型不一致","slug":"_6-2-数据类型不一致","link":"#_6-2-数据类型不一致","children":[]}]},{"level":2,"title":"7. 如何分析 SQL 是否使用索引","slug":"_7-如何分析-sql-是否使用索引","link":"#_7-如何分析-sql-是否使用索引","children":[{"level":3,"title":"7.1 使用 EXPLAIN 查看执行计划","slug":"_7-1-使用-explain-查看执行计划","link":"#_7-1-使用-explain-查看执行计划","children":[]}]},{"level":2,"title":"8. 实际应用案例总结","slug":"_8-实际应用案例总结","link":"#_8-实际应用案例总结","children":[]}],"git":{"createdTime":1732350028000,"updatedTime":1749191081000,"contributors":[{"name":"bin","email":"13598151+binxlb@user.noreply.gitee.com","commits":1}]},"readingTime":{"minutes":4.95,"words":1486},"filePathRelative":"Java八股/数据库/MySQL/重要知识点/MySQL索引详解.md","localizedDate":"2024年11月22日","excerpt":"\\n<hr>\\n<h2><strong>1. 索引是什么？为什么需要索引？</strong></h2>\\n<h3><strong>1.1 索引是什么？</strong></h3>\\n<p>索引就像书的目录。你想查一本书中的内容时，不会一页页翻，而是直接通过目录定位到具体的章节。这就是索引的作用——<strong>加速查询</strong>。</p>\\n<p>在数据库中，索引是一种特殊的<strong>数据结构</strong>，能快速定位数据，而不用逐行扫描整个表。</p>\\n<hr>\\n<h3><strong>1.2 为什么需要索引？</strong></h3>\\n<p><strong>性能提升</strong>。假设有 1 亿条数据，如果没有索引，查询的时间复杂度是 O(n)，需要扫描所有行。如果有索引，复杂度可以降为 O(log n) 或更低。</p>","autoDesc":true}')}}]);