"use strict";(self.webpackChunkblog_road=self.webpackChunkblog_road||[]).push([[3747],{6262:(t,n)=>{n.A=(t,n)=>{const r=t.__vccOpts||t;for(const[t,s]of n)r[t]=s;return r}},4021:(t,n,r)=>{r.r(n),r.d(n,{comp:()=>e,data:()=>g});var s=r(641);const o=[(0,s.Fv)('<hr><h1 id="计算机网络基础面试题下" tabindex="-1"><a class="header-anchor" href="#计算机网络基础面试题下"><span>计算机网络基础面试题下</span></a></h1><h4 id="_1-tcp与udp的区别-重要" tabindex="-1"><a class="header-anchor" href="#_1-tcp与udp的区别-重要"><span>1. <strong>TCP与UDP的区别（重要）</strong></span></a></h4><ul><li><strong>TCP</strong>（传输控制协议）是一种<strong>面向连接</strong>的协议。它保证数据的<strong>可靠性</strong>，通过<strong>确认应答</strong>、<strong>重传机制</strong>、<strong>顺序控制</strong>来确保数据正确无误地到达。TCP连接需要在通信前建立（即<strong>三次握手</strong>）并且在数据传输后关闭（即<strong>四次挥手</strong>）。</li><li><strong>UDP</strong>（用户数据报协议）是<strong>无连接</strong>的协议。它不保证数据的可靠性，不进行数据排序，也不进行重传，适用于实时传输、广播和多播等场景。UDP的传输速度比TCP更快，因为它没有这些控制机制。</li></ul><p><strong>何时选择TCP或UDP？</strong></p><ul><li><strong>选择TCP</strong>：当数据可靠性非常重要，尤其是需要保证顺序并且无法丢失数据时，例如文件传输、网页浏览等。</li><li><strong>选择UDP</strong>：当对延迟要求高且可以容忍部分数据丢失时，例如视频会议、实时游戏、音频流等。</li></ul><h4 id="_2-http基于tcp还是udp" tabindex="-1"><a class="header-anchor" href="#_2-http基于tcp还是udp"><span>2. <strong>HTTP基于TCP还是UDP？</strong></span></a></h4><ul><li><strong>HTTP</strong>是基于<strong>TCP</strong>的协议。因为HTTP需要保证请求和响应的顺序，以及数据的完整性，尤其是在传输网页内容、图片和文件时，TCP提供了必要的可靠性保障。</li></ul><h4 id="_3-使用tcp的协议有哪些-使用udp的协议有哪些" tabindex="-1"><a class="header-anchor" href="#_3-使用tcp的协议有哪些-使用udp的协议有哪些"><span>3. <strong>使用TCP的协议有哪些？使用UDP的协议有哪些？</strong></span></a></h4><ul><li><strong>使用TCP的协议</strong>：HTTP、HTTPS、FTP、SMTP、Telnet等。</li><li><strong>使用UDP的协议</strong>：DNS、SNMP、DHCP、TFTP、VoIP等。</li></ul><h4 id="_4-tcp三次握手和四次挥手-非常重要" tabindex="-1"><a class="header-anchor" href="#_4-tcp三次握手和四次挥手-非常重要"><span>4. <strong>TCP三次握手和四次挥手（非常重要）</strong></span></a></h4><ul><li><p><strong>三次握手</strong>：</p><ol><li><strong>客户端发送SYN包</strong>：客户端向服务器发送SYN请求，表明想要建立连接。</li><li><strong>服务器响应SYN-ACK包</strong>：服务器收到客户端的SYN包后，向客户端发送SYN-ACK包，确认连接请求。</li><li><strong>客户端发送ACK包</strong>：客户端收到SYN-ACK包后，发送ACK包确认，连接建立。</li></ol></li><li><p><strong>四次挥手</strong>：</p><ol><li><strong>客户端发送FIN包</strong>：客户端告诉服务器，它的数据已经发送完毕，希望关闭连接。</li><li><strong>服务器响应ACK包</strong>：服务器确认收到FIN包，并回复ACK，表示客户端可以关闭连接。</li><li><strong>服务器发送FIN包</strong>：服务器确认关闭，向客户端发送FIN包。</li><li><strong>客户端发送ACK包</strong>：客户端确认收到服务器的FIN包，连接关闭。</li></ol></li></ul><h4 id="_5-tcp如何保证传输的可靠性" tabindex="-1"><a class="header-anchor" href="#_5-tcp如何保证传输的可靠性"><span>5. <strong>TCP如何保证传输的可靠性？</strong></span></a></h4><ul><li>TCP通过<strong>确认应答</strong>、<strong>重传机制</strong>、<strong>流量控制</strong>和<strong>拥塞控制</strong>来保证数据可靠性。每个数据包都必须得到接收方的确认，若没有收到确认，数据会被重新传输。此外，TCP使用<strong>滑动窗口</strong>技术来进行流量控制，防止接收方超负荷。</li></ul><h4 id="_6-ip协议的作用是什么" tabindex="-1"><a class="header-anchor" href="#_6-ip协议的作用是什么"><span>6. <strong>IP协议的作用是什么？</strong></span></a></h4><ul><li><strong>IP协议</strong>（Internet Protocol）负责在网络中<strong>寻址</strong>和<strong>路由</strong>数据包。它确保数据包能够从源主机传输到目标主机。IP协议本身不保证数据的可靠性或顺序，仅负责数据包的传输和寻址。</li></ul><h4 id="_7-什么是ip地址-ip寻址如何工作" tabindex="-1"><a class="header-anchor" href="#_7-什么是ip地址-ip寻址如何工作"><span>7. <strong>什么是IP地址？IP寻址如何工作？</strong></span></a></h4><ul><li><strong>IP地址</strong>是用于标识网络上每个主机的唯一地址，分为IPv4和IPv6。IPv4使用32位地址，IPv6使用128位地址。</li><li><strong>IP寻址</strong>通过将目标IP地址与路由器中的路由表进行匹配，确定数据包的转发路径。每个路由器根据目标IP地址将数据包转发到下一个路由器，直到数据包到达目的地。</li></ul><h4 id="_8-什么是ip地址过滤" tabindex="-1"><a class="header-anchor" href="#_8-什么是ip地址过滤"><span>8. <strong>什么是IP地址过滤？</strong></span></a></h4><ul><li><strong>IP地址过滤</strong>是通过设定规则，阻止或允许某些IP地址访问网络资源。它常用于防火墙和路由器中，用于增强网络安全性。</li></ul><h4 id="_9-ipv4和ipv6有什么区别" tabindex="-1"><a class="header-anchor" href="#_9-ipv4和ipv6有什么区别"><span>9. <strong>IPv4和IPv6有什么区别？</strong></span></a></h4><ul><li><strong>IPv4</strong>使用32位地址空间，最多支持约43亿个地址，而<strong>IPv6</strong>使用128位地址，支持更多的地址，足以满足全球设备的需求。</li><li>IPv6还引入了简化的报头结构和更高效的路由机制，使得数据包转发更加高效。</li></ul><h4 id="_10-如何获取客户端真实ip" tabindex="-1"><a class="header-anchor" href="#_10-如何获取客户端真实ip"><span>10. <strong>如何获取客户端真实IP？</strong></span></a></h4><ul><li>可以通过<strong>X-Forwarded-For</strong>头部获取客户端的真实IP。如果客户端通过代理服务器访问，这个头部会包含原始客户端的IP地址。</li></ul><h4 id="_11-nat的作用是什么" tabindex="-1"><a class="header-anchor" href="#_11-nat的作用是什么"><span>11. <strong>NAT的作用是什么？</strong></span></a></h4><ul><li><strong>NAT</strong>（Network Address Translation）用于将私有IP地址转换为公共IP地址，它使得多个设备能够共享一个公共IP地址。NAT常用于路由器中，特别是在家庭和小型办公室中。</li></ul><h4 id="_12-arp的作用是什么" tabindex="-1"><a class="header-anchor" href="#_12-arp的作用是什么"><span>12. <strong>ARP的作用是什么？</strong></span></a></h4><ul><li><strong>ARP</strong>（Address Resolution Protocol）用于将<strong>IP地址</strong>映射到<strong>MAC地址</strong>。它解决了网络层的IP地址和链路层的物理地址之间的映射问题。</li></ul><h4 id="_13-什么是mac地址" tabindex="-1"><a class="header-anchor" href="#_13-什么是mac地址"><span>13. <strong>什么是MAC地址？</strong></span></a></h4><ul><li><strong>MAC地址</strong>（Media Access Control Address）是网络接口卡（NIC）上的硬件地址。每个NIC都有一个唯一的MAC地址，用于局域网内的设备识别。</li></ul><h4 id="_14-arp协议解决了什么问题" tabindex="-1"><a class="header-anchor" href="#_14-arp协议解决了什么问题"><span>14. <strong>ARP协议解决了什么问题？</strong></span></a></h4><ul><li><strong>ARP协议</strong>解决了网络层地址（IP地址）和数据链路层地址（MAC地址）之间的映射问题。通过ARP协议，设备可以查询到目标设备的MAC地址，从而完成数据链路层的通信。</li></ul><h4 id="_15-arp协议的工作原理" tabindex="-1"><a class="header-anchor" href="#_15-arp协议的工作原理"><span>15. <strong>ARP协议的工作原理？</strong></span></a></h4><ul><li>ARP工作原理：当一个设备想要发送数据到某个IP地址，但不知道该IP的MAC地址时，设备会广播ARP请求包，询问网络中的其他设备“谁拥有这个IP地址”。拥有该IP的设备会通过ARP响应包，告知自己的MAC地址。</li></ul><hr>',35)],a={},e=(0,r(6262).A)(a,[["render",function(t,n){return(0,s.uX)(),(0,s.CE)("div",null,o)}]]),g=JSON.parse('{"path":"/Java%E5%85%AB%E8%82%A1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%8B.html","title":"计算机网络基础面试题下","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-11-10T00:00:00.000Z","category":["计算机基础"],"tag":["计算机网络"],"description":"计算机网络基础面试题下 1. TCP与UDP的区别（重要） TCP（传输控制协议）是一种面向连接的协议。它保证数据的可靠性，通过确认应答、重传机制、顺序控制来确保数据正确无误地到达。TCP连接需要在通信前建立（即三次握手）并且在数据传输后关闭（即四次挥手）。 UDP（用户数据报协议）是无连接的协议。它不保证数据的可靠性，不进行数据排序，也不进行重传，适...","head":[["meta",{"property":"og:url","content":"https://xlb3055.github.io/newBlog/Java%E5%85%AB%E8%82%A1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%8B.html"}],["meta",{"property":"og:site_name","content":"Bin的成长博客"}],["meta",{"property":"og:title","content":"计算机网络基础面试题下"}],["meta",{"property":"og:description","content":"计算机网络基础面试题下 1. TCP与UDP的区别（重要） TCP（传输控制协议）是一种面向连接的协议。它保证数据的可靠性，通过确认应答、重传机制、顺序控制来确保数据正确无误地到达。TCP连接需要在通信前建立（即三次握手）并且在数据传输后关闭（即四次挥手）。 UDP（用户数据报协议）是无连接的协议。它不保证数据的可靠性，不进行数据排序，也不进行重传，适..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-06T06:24:41.000Z"}],["meta",{"property":"article:author","content":"Bin"}],["meta",{"property":"article:tag","content":"计算机网络"}],["meta",{"property":"article:published_time","content":"2024-11-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-06T06:24:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算机网络基础面试题下\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-06T06:24:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Bin\\",\\"url\\":\\"/avator_img.jpg\\"}]}"]]},"headers":[],"git":{"createdTime":1732275083000,"updatedTime":1749191081000,"contributors":[{"name":"bin","email":"13598151+binxlb@user.noreply.gitee.com","commits":1}]},"readingTime":{"minutes":4.84,"words":1452},"filePathRelative":"Java八股/计算机基础/网络/计算机网络面试题下.md","localizedDate":"2024年11月10日","excerpt":"<hr>\\n<h1>计算机网络基础面试题下</h1>\\n<h4>1. <strong>TCP与UDP的区别（重要）</strong></h4>\\n<ul>\\n<li><strong>TCP</strong>（传输控制协议）是一种<strong>面向连接</strong>的协议。它保证数据的<strong>可靠性</strong>，通过<strong>确认应答</strong>、<strong>重传机制</strong>、<strong>顺序控制</strong>来确保数据正确无误地到达。TCP连接需要在通信前建立（即<strong>三次握手</strong>）并且在数据传输后关闭（即<strong>四次挥手</strong>）。</li>\\n<li><strong>UDP</strong>（用户数据报协议）是<strong>无连接</strong>的协议。它不保证数据的可靠性，不进行数据排序，也不进行重传，适用于实时传输、广播和多播等场景。UDP的传输速度比TCP更快，因为它没有这些控制机制。</li>\\n</ul>","autoDesc":true}')}}]);