"use strict";(self.webpackChunkblog_road=self.webpackChunkblog_road||[]).push([[1372],{6262:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,r]of t)a[e]=r;return a}},9944:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>o,data:()=>i});var r=a(641);const l=[(0,r.Lk)("h1",{id:"线程的实现方式",tabindex:"-1"},[(0,r.Lk)("a",{class:"header-anchor",href:"#线程的实现方式"},[(0,r.Lk)("span",null,"线程的实现方式")])],-1),(0,r.Lk)("ol",null,[(0,r.Lk)("li",null,"继承Thread类，重写run方法"),(0,r.Lk)("li",null,"实现runable接口，重写的run方法"),(0,r.Lk)("li",null,"实现callable接口，重写call方法。搭配FutureTask来获取返回结果"),(0,r.Lk)("li",null,"利用线程池创建线程")],-1)],n={},o=(0,a(6262).A)(n,[["render",function(e,t){return(0,r.uX)(),(0,r.CE)("div",null,l)}]]),i=JSON.parse('{"path":"/Java%E5%85%AB%E8%82%A1/%E6%9D%82%E7%A2%8E%E8%AE%B0%E5%BD%95/%EF%BD%9E%E5%90%8E%E7%AB%AF%E6%9D%82%E8%AE%B0/Java/%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html","title":"线程的实现方式","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-08-11T00:00:00.000Z","category":["后端"],"tag":["Java","后端开发技巧"],"description":"线程的实现方式 继承Thread类，重写run方法 实现runable接口，重写的run方法 实现callable接口，重写call方法。搭配FutureTask来获取返回结果 利用线程池创建线程","head":[["meta",{"property":"og:url","content":"https://xlb3055.github.io/newBlog/Java%E5%85%AB%E8%82%A1/%E6%9D%82%E7%A2%8E%E8%AE%B0%E5%BD%95/%EF%BD%9E%E5%90%8E%E7%AB%AF%E6%9D%82%E8%AE%B0/Java/%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Bin的成长博客"}],["meta",{"property":"og:title","content":"线程的实现方式"}],["meta",{"property":"og:description","content":"线程的实现方式 继承Thread类，重写run方法 实现runable接口，重写的run方法 实现callable接口，重写call方法。搭配FutureTask来获取返回结果 利用线程池创建线程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-06T06:24:41.000Z"}],["meta",{"property":"article:author","content":"Bin"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"后端开发技巧"}],["meta",{"property":"article:published_time","content":"2024-08-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-06T06:24:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线程的实现方式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-06T06:24:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Bin\\",\\"url\\":\\"/avator_img.jpg\\"}]}"]]},"headers":[],"git":{"createdTime":1732275083000,"updatedTime":1749191081000,"contributors":[{"name":"bin","email":"13598151+binxlb@user.noreply.gitee.com","commits":1}]},"readingTime":{"minutes":0.26,"words":79},"filePathRelative":"Java八股/杂碎记录/～后端杂记/Java/线程的实现方式.md","localizedDate":"2024年8月11日","excerpt":"\\n<ol>\\n<li>继承Thread类，重写run方法</li>\\n<li>实现runable接口，重写的run方法</li>\\n<li>实现callable接口，重写call方法。搭配FutureTask来获取返回结果</li>\\n<li>利用线程池创建线程</li>\\n</ol>\\n","autoDesc":true}')}}]);